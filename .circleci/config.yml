version: 2.1
orbs:
  node: circleci/node@3.0.0
  codecov: codecov/codecov@3
  slack: circleci/slack@4.9.3

executors:
  default:
    docker:
      - image: node:16.13.2

  notify:
    docker:
      - image: "cimg/base:stable"
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference

references:
  container_config: &container_config
    executor: default
    working_directory: ~/repo

  notify_container_config: &notify_container_config
    executor: notify
    working_directory: ~/repo

  attach_workspace: &attach_workspace
    attach_workspace:
      at: ~/repo

jobs:
  install:
    # docker:
    #   - image: node:16.13.2

    # working_directory: ~/repo
    <<: *container_config

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: .
          paths:
            - .

      - run:
          name: Run Lint
          command: npm run lint
      # - run:
      #     name: Run Tests
      #     command: npm run test
      # - run:
      #     name: Run Build
      #     command: npm run build
      # - run:
      #     name: Generate Coverage Report
      #     command: npm run test:coverage

      # # Run coverage report for Code Climate
      # - run:
      #     name: Setup Code Climate test-reporter
      #     command: |
      #       # download test reporter as a static binary
      #       curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      #       chmod +x ./cc-test-reporter
      #       ./cc-test-reporter before-build
      # - run:
      #     name: Send coverage report to Code Climate
      #     command:
      #       # nyc report requires that nyc has already been run,
      #       # which creates the .nyc_output folder containing necessary data
      #       ./cc-test-reporter after-build -t lcov

      # - run:
      #     name: ECHO
      #     command: |
      #       echo "This is pipeline ID << pipeline.id >>"
      #       echo "This is pipeline number << pipeline.number >>"
      #       echo "This is pipeline git url << pipeline.project.git_url >>"
      #       echo "This is pipeline type << pipeline.project.type >>"
      #       echo "This is pipeline git tag << pipeline.git.tag >>"
      #       echo "This is pipeline branch << pipeline.git.branch >>"
      #       echo "This is pipeline revision << pipeline.git.revision >>"
      #       echo "This is pipeline in_setup << pipeline.in_setup >>"
      #       echo "This is pipeline trigger_source << pipeline.trigger_source >>"
      #       echo "This is pipeline schedule name << pipeline.schedule.name >>"
      #       echo "This is pipeline schedule id << pipeline.schedule.id >>"

      # - codecov/upload:
      #     file: "./coverage/clover.xml"

  lint:
    <<: *container_config
    # docker:
    #   - image: node:16.13.2

    # working_directory: ~/repo
    resource_class: large
    steps:
      - *attach_workspace
      - run:
          name: Run Lint
          command: npm run lint

  test:
    <<: *container_config
    # docker:
    #   - image: node:16.13.2

    # working_directory: ~/repo
    resource_class: large
    steps:
      - *attach_workspace
      - run:
          name: Run Tests
          command: npm run test

  build:
    <<: *container_config
    # docker:
    #   - image: node:16.13.2

    # working_directory: ~/repo
    resource_class: large
    steps:
      - *attach_workspace
      - run:
          name: Run Build
          command: npm run build

  generate_test_coverage:
    <<: *container_config
    resource_class: large
    # docker:
    #   - image: node:16.13.2

    # working_directory: ~/repo
    steps:
      - *attach_workspace
      - run:
          name: Generate Coverage Report
          command: npm run test:coverage

  setup_code_climate:
    <<: *container_config
    # docker:
    #   - image: node:16.13.2

    # working_directory: ~/repo
    resource_class: large
    steps:
      # - *attach_workspace
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build

  send_coverage_report_code_climate:
    <<: *container_config
    # docker:
    #   - image: node:16.13.2

    # working_directory: ~/repo
    resource_class: large
    steps:
      - *attach_workspace
      - run:
          name: Send coverage report to Code Climate
          command:
            # nyc report requires that nyc has already been run,
            # which creates the .nyc_output folder containing necessary data
            ./cc-test-reporter after-build -t lcov

  upload_codecov:
    <<: *container_config
    # docker:
    #   - image: node:16.13.2

    # working_directory: ~/repo
    resource_class: large
    steps:
      - *attach_workspace
      - codecov/upload:
          file: "./coverage/clover.xml"

  notify:
    <<: *notify_container_config
    # docker:
    #   # - image: node:16.13.2
    #   - image: 'cimg/base:stable'
    #     auth:
    #       username: mydockerhub-user
    #       password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - slack/notify:
          channel: "alerts"
          event: pass
          mentions: "@here"
          template: basic_success_1
          # custom: |
          #   {
          #     "blocks": [
          #       {
          #         "type": "section",
          #         "fields": [
          #           {
          #             "type": "plain_text",
          #             "text": "*This is a text notification*",
          #             "emoji": true
          #           }
          #         ]
          #       }
          #     ]
          #   }
          # event: always

workflows:
  send-notification:
    jobs:
      - install
      - lint:
          requires:
            - install
      - test:
          requires:
            - lint
      - build:
          requires:
            - test
      - generate_test_coverage:
          requires:
            # - install
            - test
      - setup_code_climate:
          requires:
            # - install
            - test
      - send_coverage_report_code_climate:
          requires:
            # - install
            - test
      - upload_codecov:
          requires:
            # - install
            - test
      - notify:
          context: slack-secrets
          requires:
            - build
# ---------------------------
# upload_coverage:
#   docker:
#     - image: node:16.13.2

#   working_directory: ~/repo
#   steps:
#     - checkout

#     - run: npm run test:coverage

# - run: # run tests
#     name: Run Test and Coverage
#     command: |
#       ./cc-test-reporter before-build
#       npm run test:coverage
#       ./cc-test-reporter after-build --exit-code $?

# - codecov/upload:
#     file: './coverage/clover.xml'

# - run:
#     name: Setup Code Climate test-reporter
#     command: |
#       curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#       chmod +x ./cc-test-reporter

# - run:
#     name: Run Test and Coverage
#     command: |
#       ./cc-test-reporter before-build
#       npm run test:coverage
#       ./cc-test-reporter after-build --exit-code $?

# - codecov/upload:
#     file: './coverage/clover.xml'
# - codecov/upload:
#     file: './coverage/clover.xml'
# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build
#       - upload_coverage:
#           # type: approval
#           requires:
#             - build
